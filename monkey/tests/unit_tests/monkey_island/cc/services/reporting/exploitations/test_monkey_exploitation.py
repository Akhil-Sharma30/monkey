from ipaddress import IPv4Address, IPv4Interface
from uuid import UUID

from common import OperatingSystem
from common.agent_events import ExploitationEvent
from monkey_island.cc.models import Machine
from monkey_island.cc.services.reporting.exploitations.monkey_exploitation import (
    get_exploits_used_on_node,
)

TARGET_IP_STR = "192.168.1.10"
OTHER_IP_STR = "192.168.99.99"
AGENT_ID = UUID("012e7238-7b81-4108-8c7f-0787bc3f3c10")
TIMESTAMP = 1664371327.4067292

EVENT_1 = ExploitationEvent(
    source=AGENT_ID,
    timestamp=TIMESTAMP,
    target=IPv4Address(TARGET_IP_STR),
    success=True,
    exploiter_name="SSHExploiter",
)

EVENT_2 = ExploitationEvent(
    source=AGENT_ID,
    timestamp=TIMESTAMP,
    target=IPv4Address(TARGET_IP_STR),
    success=True,
    exploiter_name="Log4ShellExploiter",
)

EVENT_3 = ExploitationEvent(
    source=AGENT_ID,
    timestamp=TIMESTAMP,
    target=IPv4Address(OTHER_IP_STR),
    success=True,
    exploiter_name="ZerologonExploiter",
)

MACHINE = Machine(
    id=1,
    hardware_id=101,
    island=True,
    network_interfaces=[IPv4Interface(TARGET_IP_STR)],
    operating_system=OperatingSystem.WINDOWS,
)


def test_get_exploits_used_on_node__2_exploits():
    exploits = get_exploits_used_on_node(MACHINE, [EVENT_1, EVENT_2])
    assert sorted(exploits) == sorted(["SSH Exploiter", "Log4Shell Exploiter"])


def test_get_exploits_used_on_node__duplicate_exploits():
    exploits = get_exploits_used_on_node(MACHINE, [EVENT_1, EVENT_1])
    assert exploits == ["SSH Exploiter"]


def test_get_exploits_used_on_node__returns_only_exploits_for_node():
    exploits = get_exploits_used_on_node(MACHINE, [EVENT_1, EVENT_2, EVENT_3])
    assert sorted(exploits) == sorted(["SSH Exploiter", "Log4Shell Exploiter"])
