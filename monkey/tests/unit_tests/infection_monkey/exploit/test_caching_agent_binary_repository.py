from multiprocessing import Queue, get_context
from unittest.mock import MagicMock

import pytest
from tests.unit_tests.infection_monkey.base_island_api_client import BaseIslandAPIClient

from common import OperatingSystem
from infection_monkey.exploit import CachingAgentBinaryRepository
from infection_monkey.island_api_client import IIslandAPIClient

AGENT_BINARY = b"BINARY_EXECUTABLE"


@pytest.fixture
def mock_island_api_client() -> IIslandAPIClient:
    return StubIslandAPIClient()


class PickableMagicMock(MagicMock):
    def __reduce__(self):
        return (MagicMock, ())


class StubIslandAPIClient(BaseIslandAPIClient):
    def __init__(self):
        self._calls = get_context("spawn").Value("i", 0)

    @property
    def calls(self):
        return self._calls.value

    def get_agent_binary(self, _: OperatingSystem) -> bytes:
        with self._calls.get_lock():
            self._calls.value += 1
            print(f"CALLED: {self._calls}")
            return AGENT_BINARY


def test_get_agent_binary__uses_cache(mock_island_api_client):
    caching_agent_binary_repository = CachingAgentBinaryRepository(mock_island_api_client)

    binary1 = caching_agent_binary_repository.get_agent_binary(OperatingSystem.WINDOWS)
    binary2 = caching_agent_binary_repository.get_agent_binary(OperatingSystem.WINDOWS)

    assert binary1.getvalue() == AGENT_BINARY
    assert binary2.getvalue() == AGENT_BINARY
    assert mock_island_api_client.calls == 1


def get_binary(
    agent_binary_repository: CachingAgentBinaryRepository,
    queue: Queue,
):
    agent_binary = agent_binary_repository.get_agent_binary(OperatingSystem.WINDOWS)
    queue.put(agent_binary)


def test_get_agent_binary__uses_multiprocess_cache(mock_island_api_client):
    caching_agent_binary_repository = CachingAgentBinaryRepository(mock_island_api_client)
    context = get_context("spawn")
    queue = context.Queue()

    p1 = context.Process(target=get_binary, args=(caching_agent_binary_repository, queue))
    p1.start()
    p1_binary = queue.get()
    p1.join()

    p2 = context.Process(target=get_binary, args=(caching_agent_binary_repository, queue))
    p2.start()
    p2_binary = queue.get()
    p2.join()

    assert p1_binary.getvalue() == AGENT_BINARY
    assert p2_binary.getvalue() == AGENT_BINARY
    assert mock_island_api_client.calls == 1
