from infection_monkey.exploit.powershell_utils.credentials import (
    Credentials,
    SecretType,
    get_credentials,
)

TEST_USERNAMES = ["user1", "user2"]
TEST_PASSWORDS = ["p1", "p2"]
TEST_LM_HASHES = ["aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"]
TEST_NT_HASHES = ["cccccccccccccccccccccccccccccccc", "dddddddddddddddddddddddddddddddd"]


def test_get_credentials__empty_windows_true():
    credentials = get_credentials([], [], [], [], True)

    assert len(credentials) == 1
    assert credentials[0] == Credentials(username=None, secret=None, secret_type=SecretType.CACHED)


def test_get_credentials__empty_windows_false():
    credentials = get_credentials([], [], [], [], False)

    assert len(credentials) == 0


def test_get_credentials__username_only_windows_true():
    credentials = get_credentials(TEST_USERNAMES, [], [], [], True)

    assert len(credentials) == 5
    assert (
        Credentials(username=TEST_USERNAMES[0], secret="", secret_type=SecretType.PASSWORD)
        in credentials
    )
    assert (
        Credentials(username=TEST_USERNAMES[1], secret="", secret_type=SecretType.PASSWORD)
        in credentials
    )
    assert (
        Credentials(username=TEST_USERNAMES[0], secret=None, secret_type=SecretType.CACHED)
        in credentials
    )
    assert (
        Credentials(username=TEST_USERNAMES[1], secret=None, secret_type=SecretType.CACHED)
        in credentials
    )


def test_get_credentials__username_only_windows_false():
    credentials = get_credentials(TEST_USERNAMES, [], [], [], False)

    assert len(credentials) == 2
    assert (
        Credentials(username=TEST_USERNAMES[0], secret="", secret_type=SecretType.PASSWORD)
        in credentials
    )
    assert (
        Credentials(username=TEST_USERNAMES[1], secret="", secret_type=SecretType.PASSWORD)
        in credentials
    )


def test_get_credentials__username_password_windows_true():
    credentials = get_credentials(TEST_USERNAMES, TEST_PASSWORDS, [], [], True)

    assert len(credentials) == 9
    for user in TEST_USERNAMES:
        for password in TEST_PASSWORDS:
            assert (
                Credentials(username=user, secret=password, secret_type=SecretType.PASSWORD)
                in credentials
            )


def test_get_credentials__username_lm_hash_windows_false():
    credentials = get_credentials(TEST_USERNAMES, TEST_PASSWORDS, TEST_LM_HASHES, [], False)

    assert len(credentials) == 10
    for user in TEST_USERNAMES:
        for lm_hash in TEST_LM_HASHES:
            assert (
                Credentials(username=user, secret=lm_hash, secret_type=SecretType.LM_HASH)
                in credentials
            )


def test_get_credentials__username_nt_hash_windows_false():
    credentials = get_credentials(
        TEST_USERNAMES, TEST_PASSWORDS, TEST_LM_HASHES, TEST_NT_HASHES, False
    )

    assert len(credentials) == 14
    for user in TEST_USERNAMES:
        for nt_hash in TEST_NT_HASHES:
            assert (
                Credentials(username=user, secret=nt_hash, secret_type=SecretType.NT_HASH)
                in credentials
            )
