# from infection_monkey.exploit.powershell_utils.auth_options import AuthOptions
from infection_monkey.exploit.powershell_utils.auth_options import (
    AUTH_BASIC,
    AUTH_NEGOTIATE,
    ENCRYPTION_AUTO,
    ENCRYPTION_NEVER,
    get_auth_options,
)
from infection_monkey.exploit.powershell_utils.credentials import Credentials, SecretType

CREDENTIALS = [
    Credentials("user1", "password1", SecretType.PASSWORD),
    Credentials("user2", "", SecretType.PASSWORD),
    Credentials("user3", None, SecretType.CACHED),
]


def test_get_auth_options__ssl_true_with_password():
    auth_options = get_auth_options(CREDENTIALS, use_ssl=True)

    assert auth_options[0].ssl


def test_get_auth_options__ssl_true_empty_password():
    auth_options = get_auth_options(CREDENTIALS, use_ssl=True)

    assert not auth_options[1].ssl


def test_get_auth_options__ssl_true_none_password():
    auth_options = get_auth_options(CREDENTIALS, use_ssl=True)

    assert auth_options[2].ssl


def test_get_auth_options__ssl_false_with_password():
    auth_options = get_auth_options(CREDENTIALS, use_ssl=False)

    assert not auth_options[0].ssl


def test_get_auth_options__ssl_false_empty_password():
    auth_options = get_auth_options(CREDENTIALS, use_ssl=False)

    assert not auth_options[1].ssl


def test_get_auth_options__ssl_false_none_password():
    auth_options = get_auth_options(CREDENTIALS, use_ssl=False)

    assert not auth_options[2].ssl


def test_get_auth_options__auth_type_with_password():
    auth_options = get_auth_options(CREDENTIALS, use_ssl=False)

    assert auth_options[0].auth_type == AUTH_NEGOTIATE


def test_get_auth_options__auth_type_empty_password():
    auth_options = get_auth_options(CREDENTIALS, use_ssl=False)

    assert auth_options[1].auth_type == AUTH_BASIC


def test_get_auth_options__auth_type_none_password():
    auth_options = get_auth_options(CREDENTIALS, use_ssl=False)

    assert auth_options[2].auth_type == AUTH_NEGOTIATE


def test_get_auth_options__encryption_with_password():
    auth_options = get_auth_options(CREDENTIALS, use_ssl=False)

    assert auth_options[0].encryption == ENCRYPTION_AUTO


def test_get_auth_options__encryption_empty_password():
    auth_options = get_auth_options(CREDENTIALS, use_ssl=False)

    assert auth_options[1].encryption == ENCRYPTION_NEVER


def test_get_auth_options__encryption_none_password():
    auth_options = get_auth_options(CREDENTIALS, use_ssl=False)

    assert auth_options[2].encryption == ENCRYPTION_AUTO
