from infection_monkey.exploit.powershell_utils import utils
from infection_monkey.model.host import VictimHost

TEST_USERS = ["user1", "user2"]
TEST_PASSWORDS = ["p1", "p2"]


def test_get_credentials__empty_windows_true():
    credentials = utils.get_credentials([], [], True)

    assert len(credentials) == 1
    assert credentials[0] == (None, None)


def test_get_credentials__empty_windows_false():
    credentials = utils.get_credentials([], [], False)

    assert len(credentials) == 0


def test_get_credentials__username_only_windows_true():
    credentials = utils.get_credentials(TEST_USERS, [], True)

    assert len(credentials) == 5
    assert (TEST_USERS[0], "") in credentials
    assert (TEST_USERS[1], "") in credentials
    assert (TEST_USERS[0], None) in credentials
    assert (TEST_USERS[1], None) in credentials


def test_get_credentials__username_only_windows_false():
    credentials = utils.get_credentials(TEST_USERS, [], False)

    assert len(credentials) == 2
    assert (TEST_USERS[0], "") in credentials
    assert (TEST_USERS[1], "") in credentials


def test_get_credentials__username_password_windows_true():
    credentials = utils.get_credentials(TEST_USERS, TEST_PASSWORDS, True)

    assert len(credentials) == 9
    for user in TEST_USERS:
        for password in TEST_PASSWORDS:
            assert (user, password) in credentials


def test_get_powershell_client_params__password_none():
    (ssl, auth, encryption) = utils.get_powershell_client_params(None)

    assert ssl is True
    assert auth == utils.AUTH_NEGOTIATE
    assert encryption == utils.ENCRYPTION_AUTO


def test_get_powershell_client_params__password_str():
    (ssl, auth, encryption) = utils.get_powershell_client_params("1234")

    assert ssl is True
    assert auth == utils.AUTH_NEGOTIATE
    assert encryption == utils.ENCRYPTION_AUTO


def test_get_powershell_client_params__password_empty():
    (ssl, auth, encryption) = utils.get_powershell_client_params("")

    assert ssl is False
    assert auth == utils.AUTH_BASIC
    assert encryption == utils.ENCRYPTION_NEVER


def test_build_monkey_execution_command():
    host = VictimHost("127.0.0.1")
    depth = 2
    executable_path = "/tmp/test-monkey"

    cmd = utils.build_monkey_execution_command(host, depth, executable_path)

    assert f"-d {depth}" in cmd
    assert executable_path in cmd
