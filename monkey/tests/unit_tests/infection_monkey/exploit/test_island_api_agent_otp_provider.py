from contextlib import suppress
from unittest.mock import MagicMock

import pytest

from infection_monkey.exploit import IslandAPIAgentOTPProvider
from infection_monkey.island_api_client import (
    IslandAPIAuthenticationError,
    IslandAPIConnectionError,
    IslandAPIError,
    IslandAPIRequestError,
    IslandAPIRequestFailedError,
    IslandAPIRequestLimitExceededError,
    IslandAPITimeoutError,
)


def test_get_otp__retries_if_rate_limit_hit(monkeypatch):
    monkeypatch.setattr(
        "infection_monkey.exploit.island_api_agent_otp_provider.sleep", lambda _: None
    )
    island_api_client = MagicMock()
    island_api_client.get_otp.side_effect = IslandAPIRequestLimitExceededError
    otp_provider = IslandAPIAgentOTPProvider(island_api_client)

    with suppress(RuntimeError):
        otp_provider.get_otp()

    assert island_api_client.get_otp.call_count > 1


@pytest.mark.parametrize(
    "error",
    [
        IslandAPIAuthenticationError,
        IslandAPIConnectionError,
        IslandAPIRequestError,
        IslandAPIRequestFailedError,
        IslandAPIRequestLimitExceededError,
        IslandAPITimeoutError,
        IslandAPIError,
    ],
)
def test_get_otp__raises_error_if_unable_to_retrieve_otp(monkeypatch, error):
    monkeypatch.setattr(
        "infection_monkey.exploit.island_api_agent_otp_provider.sleep", lambda _: None
    )
    island_api_client = MagicMock()
    island_api_client.get_otp.side_effect = error
    otp_provider = IslandAPIAgentOTPProvider(island_api_client)

    with pytest.raises(RuntimeError):
        otp_provider.get_otp()
