from dataclasses import dataclass

from infection_monkey.exploit.powershell_utils.credentials import Credentials

AUTH_BASIC = "basic"
AUTH_NEGOTIATE = "negotiate"
ENCRYPTION_AUTO = "auto"
ENCRYPTION_NEVER = "never"


@dataclass
class AuthOptions:
    auth_type: str
    encryption: str
    ssl: bool


def get_auth_options(credentials: Credentials, use_ssl: bool) -> AuthOptions:
    ssl = _get_ssl(credentials, use_ssl)
    auth_type = _get_auth_type(credentials)
    encryption = _get_encryption(credentials)

    return AuthOptions(auth_type, encryption, ssl)


def _get_ssl(credentials: Credentials, use_ssl):
    # Passwordless login only works with SSL false, AUTH_BASIC and ENCRYPTION_NEVER
    return False if credentials.secret == "" else use_ssl


def _get_auth_type(credentials: Credentials):
    return AUTH_BASIC if credentials.secret == "" else AUTH_NEGOTIATE


def _get_encryption(credentials: Credentials):
    return ENCRYPTION_NEVER if credentials.secret == "" else ENCRYPTION_AUTO
