from typing import Dict, List

from common.common_consts.telem_categories import TelemCategoryEnum
from infection_monkey.model.host import VictimHost
from infection_monkey.telemetry.base_telem import BaseTelem


class ExploitTelem(BaseTelem):
    def __init__(self, name: str, host: VictimHost, result: bool, info: Dict, attempts: List):
        """
        Default exploit telemetry constructor
        :param name: The name of exploiter used
        :param host: The host machine
        :param result: The result from the 'exploit_host' method
        :param info: Information about the exploiter
        :param attempts: Information about the exploiter's attempts
        """
        super(ExploitTelem, self).__init__()

        self.name = name
        self.host = host.__dict__
        self.result = result
        self.info = info
        self.attempts = attempts

    telem_category = TelemCategoryEnum.EXPLOIT

    def get_data(self) -> Dict:
        return {
            "result": self.result,
            "machine": self.host,
            "exploiter": self.name,
            "info": self.info,
            "attempts": self.attempts,
        }
