from dataclasses import asdict

from monkey_island.cc.repository import IAgentEventRepository, IMachineRepository
from monkey_island.cc.resources.AbstractResource import AbstractResource
from monkey_island.cc.resources.request_authentication import jwt_required
from monkey_island.cc.services.reporting.exploitations.monkey_exploitation import (
    get_monkey_exploited,
)


class MonkeyExploitation(AbstractResource):
    urls = ["/api/exploitations/monkey"]

    def __init__(
        self, event_repository: IAgentEventRepository, machine_repository: IMachineRepository
    ):
        self._event_repository = event_repository
        self._machine_repository = machine_repository

    @jwt_required
    def get(self):
        monkey_exploitations = [
            asdict(exploitation)
            for exploitation in get_monkey_exploited(
                self._event_repository, self._machine_repository
            )
        ]
        return {"monkey_exploitations": monkey_exploitations}
