from dataclasses import dataclass
from enum import Enum


@dataclass
class ExploiterDescriptor:
    # Must match with class names of exploiters in Infection Monkey code
    class_name: str
    display_name: str


class ExploiterDescriptorEnum(Enum):
    SMB = ExploiterDescriptor("SMBExploiter", "SMB Exploiter")
    WMI = ExploiterDescriptor("WmiExploiter", "WMI Exploiter")
    SSH = ExploiterDescriptor("SSHExploiter", "SSH Exploiter")
    MSSQL = ExploiterDescriptor("MSSQLExploiter", "MSSQL Exploiter")
    ZEROLOGON = ExploiterDescriptor("ZerologonExploiter", "Zerologon Exploiter")
    POWERSHELL = ExploiterDescriptor("PowerShellExploiter", "PowerShell Remoting Exploiter")
    LOG4SHELL = ExploiterDescriptor("Log4ShellExploiter", "Log4Shell Exploiter")

    @staticmethod
    def get_by_class_name(class_name: str) -> ExploiterDescriptor:
        return [
            descriptor.value
            for descriptor in ExploiterDescriptorEnum
            if descriptor.value.class_name == class_name
        ][0]
